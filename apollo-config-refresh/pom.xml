<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<!-- 继承 spring boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
	</parent>  	
	<artifactId>apollo-config-refresh</artifactId>
	<name>apollo-config-refresh</name>
	<packaging>jar</packaging>
	
	<properties>
		<config.version>0.0.1</config.version>	
		<apollo.client>1.0.0</apollo.client>
		<apollo.openapi.version>1.1.0</apollo.openapi.version>		
		<mybatis.spring.boot.version>2.0.0</mybatis.spring.boot.version>
		<tk.mapper.version>4.1.5</tk.mapper.version>
        <pagehelper.version>5.1.8</pagehelper.version>	
 		<mybatis-generator.version>1.3.7</mybatis-generator.version> 
        <guava.version>27.0.1-jre</guava.version>  	
		<spring-cloud.version>Greenwich.SR2</spring-cloud.version>		        
		<!-- 覆盖SpringBoot版本 -->
		<mysql.version>5.1.39</mysql.version>						
	</properties>

	<!-- 使用spring boot 构建插件 运行: mvn spring-boot:run -->
	<build>
		<plugins>
			<!-- package as an executable jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>com.hua</groupId>
			<artifactId>config-core</artifactId>
			<version>${config.version}</version>
		</dependency>		
	
	<!--  -->
	<dependency>
	  <groupId>org.springframework.boot</groupId>
	  <artifactId>spring-boot-autoconfigure</artifactId>	
	</dependency>

	   <dependency>
	        <groupId>com.ctrip.framework.apollo</groupId>
	        <artifactId>apollo-client</artifactId>
	        <version>${apollo.client}</version>
	    </dependency>

		<!-- 开放平台 -->
	   <dependency>
	        <groupId>com.ctrip.framework.apollo</groupId>
	 		<artifactId>apollo-openapi</artifactId>
 			<version>${apollo.openapi.version}</version>
	    </dependency>
		
		<!-- 测试 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
				  <groupId>org.springframework.boot</groupId>
				  <artifactId>spring-boot-starter-logging</artifactId>
        		</exclusion>
			</exclusions>
		</dependency>	

<!-- 		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>	 -->

		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis.spring.boot.version}</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- -->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper</artifactId>
			<version>${tk.mapper.version}</version>
		</dependency>

	<dependency>
		<groupId>org.mybatis.generator</groupId>
		<artifactId>mybatis-generator-core</artifactId>
		<version>${mybatis-generator.version}</version>
	</dependency>

        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
 			<version>${pagehelper.version}</version>           
        </dependency>
 
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
 			<version>${guava.version}</version>			
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter</artifactId>
		</dependency>
		
	</dependencies>
	<!-- 将依赖放入 dependencyManagement 中 可以解决 spring boot 父级依赖的冲突 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>


</project>
